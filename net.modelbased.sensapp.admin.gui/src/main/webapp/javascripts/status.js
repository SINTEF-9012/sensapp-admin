function displayTopology(topologyDiv) {		var topology=getTopology();	var nodesBody = $('#'+topologyDiv).find('#nodes').find('tbody');		var nodeList = $(document.createElement('select'));		$.each(topology.nodes, function(i,element) {		nodesBody.append(			$(document.createElement('tr'))				.append(					$(document.createElement('td'))						.attr("class","edit-name")						.append(							$(document.createElement('div'))								.text(element.name))						.append(							$(document.createElement('input'))								.attr("value",element.name)								.hide())				)				.append(					$(document.createElement('td'))						.attr("class","edit")						.append(							$(document.createElement('div'))								.text(element.srv))						.append(							$(document.createElement('input'))								.attr("value",element.srv)								.hide())				)				.append(					$(document.createElement('td'))						.attr("class","edit")						.append(							$(document.createElement('div'))								.text(element.port))						.append(							$(document.createElement('input'))								.attr("value",element.port)								.hide())				)				.append(					$(document.createElement('td'))						.append(							$(document.createElement('b'))								.attr('class','btn btn-danger')								.click(function () {									$(this).closest('tr').remove();									$('#'+topologyDiv).find('#deployment').find('option[value="'+$(this).closest('tr').find('td:first').find('div').text()+'"]').remove();									$('#'+topologyDiv).find('#deployment').find('select[value="'+$(this).closest('tr').find('td:first').find('div').text()+'"]').attr("value","");									$('#'+topologyDiv).find('#deployment').find('select[value="'+$(this).closest('tr').find('td:first').find('div').text()+'"]').prev().text("");								})								.html("&times")						)				)		);		nodeList.append($(document.createElement('option')).val(element.name).text(element.name));	});		var deploymentBody = $('#'+topologyDiv).find('#deployment').find('tbody');		$.each(topology.deployment, function(i,element) {		deploymentBody.append(				$(document.createElement('tr'))						.append(							$(document.createElement('td'))								.append(									$(document.createElement('div'))										.text(element.service))								.append(									$(document.createElement('input'))										.attr("value",element.service)										.hide())						)						.append(							$(document.createElement('td'))								.attr("class","edit")								.append(									$(document.createElement('div'))									.text(element.node))									.append(									$(nodeList.clone())										.attr("value",element.node)										.hide())						)		);	});	setEditable(topologyDiv);}function setEditable(topologyDiv) {			$('#'+topologyDiv).find('.edit,.edit-name').click(function(){		$(this).children('div').hide();		$(this).children(':input').show();		$(this).children(':input').focus();	}); 	$('#'+topologyDiv).find('.edit').find(':input').blur(function() {	    $(this).prev().text(this.value);		$(this).hide();		$(this).prev().show();    }); 	$('#'+topologyDiv).find('.edit').find(':input').keypress(function(event) {		if (event.keyCode == '13') {			$(this).prev().text(this.value);			$(this).hide();			$(this).prev().show();		}	});		$('#'+topologyDiv).find('.edit-name').find(':input').blur(function() {			var isValid=true;			var nextValue=this.value;			var otherRows = $('#'+topologyDiv).find('#nodes').find('tbody').find('tr').not($(this).closest('tr'));			$.each(otherRows,function (i,row) {				if($(row).find('td').find('div')[0].innerHTML==nextValue) {					isValid=false;				}			});			if(isValid==true) {				var optionsToEdit = $('#'+topologyDiv).find('option[value="'+$(this).prev().text()+'"]');				optionsToEdit.val(this.value);								optionsToEdit.text(this.value);				var selectToEdit = $('#'+topologyDiv).find('select[value="'+$(this).prev().text()+'"]');				selectToEdit.attr("value",this.value);				selectToEdit.prev().text(this.value);				$(this).prev().text(this.value);			}			else {				this.value = $(this).prev().text()				alertMessage("error","Node already exists",5000);			}				$(this).hide();				$(this).prev().show();	});	$('#'+topologyDiv).find('.edit-name').find(':input').keypress(function(event) {		if (event.keyCode == '13') {			var isValid=true;			var nextValue=this.value;			var otherRows = $('#'+topologyDiv).find('#nodes').find('tbody').find('tr').not($(this).closest('tr'));			$.each(otherRows,function (i,row) {				if($(row).find('td').find('div')[0].innerHTML==nextValue) {					isValid=false;				}			});			if(isValid==true) {				var optionsToEdit = $('#'+topologyDiv).find('option[value="'+$(this).prev().text()+'"]');				optionsToEdit.val(this.value);								optionsToEdit.text(this.value);				var selectToEdit = $('#'+topologyDiv).find('select[value="'+$(this).prev().text()+'"]');				selectToEdit.attr("value",this.value);				selectToEdit.prev().text(this.value);				$(this).prev().text(this.value);			}			else {				this.value = $(this).prev().text()				alertMessage("error","Node already exists",5000);			}				$(this).hide();				$(this).prev().show();		}	});	 } function reload(topologyDiv) {	$('#'+topologyDiv).find('tbody').empty();	displayTopology(topologyDiv);} function register(topologyDiv) {	var json = { "nodes":[],"deployment":[]};	var nodesRows = $('#'+topologyDiv).find('#nodes').find('tbody').find('tr');	$.each(nodesRows,function (i,row) {		if($(row).find('td').find('div')[0].innerHTML!="") {			json.nodes.push({"name":$(row).find('td').find('div')[0].innerHTML,"srv":$(row).find('td').find('div')[1].innerHTML,"port":$(row).find('td').find('div')[2].innerHTML});		}	});	var deploymentRows = $('#'+topologyDiv).find('#deployment').find('tbody').find('tr');	$.each(deploymentRows,function (i,row) {		json.deployment.push({"service":$(row).find('td').find('div')[0].innerHTML,"node":$(row).find('td').find('div')[1].innerHTML});	});	localStorage.setItem("topology", JSON.stringify(json)); }    function addEvent(div,elementNames,refValue) {	if($('#'+div).find("#nodes").find('tbody').find('tr:last').find('td').find('div').html() != "")	{		$('#'+refValue).attr('value',$('#'+refValue).attr('value') + 1);		var newRow = $(document.createElement('tr'));		newRow.append(			$(document.createElement('td'))				.attr("class","edit-name")				.append(					$(document.createElement('div')))				.append(					$(document.createElement('input'))						.hide())		);						for(var i=0;i<$('#'+div).find("#nodes").find('th').size()-2;i++) {			newRow.append(				$(document.createElement('td'))					.attr("class","edit")					.append(						$(document.createElement('div')))					.append(						$(document.createElement('input'))							.hide())			);		}		newRow.append(			$(document.createElement('td'))				.append(					$(document.createElement('b'))						.attr('class','btn btn-danger')						.click(function () {						$(this).closest('tr').remove();					})					.html("&times")				)		);	$('#'+div).find("#nodes").find('tbody').append(newRow);	var selectLists = $('#'+div).find("#deployment").find('select');	$.each(selectLists,function (i,select) {		$(select).append($(document.createElement('option')).val("").text(""));	});	setEditable(div);	}}     function removeElement(row,div) {	$('#'+div).find('#'+row).remove();}